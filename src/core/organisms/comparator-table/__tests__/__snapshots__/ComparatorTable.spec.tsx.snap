// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ComparatorTable /> renders correctly with default <ComparatorTable /> 1`] = `
<ComporatorTable
  addVehicle={[MockFunction]}
  criterias={
    Array [
      Object {
        "title": "Manufacturer OTR",
        "values": Array [
          "2",
          "2",
        ],
      },
      Object {
        "title": "WLTP Combined",
        "values": Array [
          "2",
          "2",
        ],
      },
      Object {
        "title": "Fuel Type",
        "values": Array [
          "2",
          "2",
        ],
      },
      Object {
        "title": "0 to 60 mph (secs)",
        "values": Array [
          "2",
          "2",
        ],
      },
      Object {
        "title": "CC",
        "values": Array [
          "2",
          "2",
        ],
      },
      Object {
        "title": "Engine Power - BHP",
        "values": Array [
          "2",
          "2",
        ],
      },
      Object {
        "title": "Insurance Group",
        "values": Array [
          "2",
          "2",
        ],
      },
      Object {
        "title": "No. of Seats",
        "values": Array [
          "2",
          "2",
        ],
      },
      Object {
        "title": "Top Speed",
        "values": Array [
          "2",
          "2",
        ],
      },
      Object {
        "title": "Transmission",
        "values": Array [
          "2",
          "2",
        ],
      },
      Object {
        "title": "Price",
        "values": Array [
          Object {
            "capId": 1,
            "price": 56.73,
          },
          Object {
            "capId": 2,
            "price": 55.44,
          },
        ],
      },
      Object {
        "title": "Heading",
        "values": Array [
          Object {
            "capId": 1,
            "description": "1.6 GDi SE Nav 5DR 2WD",
            "image": "https://res.cloudinary.com/diun8mklf/image/upload/c_fill,g_center,h_425,q_auto:best,w_800/v1581538982/cars/AudiQ70719_2_kk0b0n.jpg",
            "name": "Peugeot 208",
          },
          Object {
            "capId": 2,
            "description": "1.6 GDi SE Nav 5DR 2WD",
            "image": "https://res.cloudinary.com/diun8mklf/image/upload/c_fill,g_center,h_425,q_auto:best,w_800/v1581538982/cars/AudiQ70719_2_kk0b0n.jpg",
            "name": "Peugeot 208",
          },
        ],
      },
    ]
  }
  deleteVehicle={[MockFunction]}
  isNotEmptyPage={true}
  viewOffer={[MockFunction]}
>
  <div
    className="comparator-table"
  >
    <Slider
      countItems={3}
      index={0}
      setIndex={[Function]}
    >
      <header
        className="comparator-table--header"
      >
        <Carousel
          afterSlide={[Function]}
          autoGenerateStyleTag={true}
          autoplay={false}
          autoplayInterval={3000}
          autoplayReverse={false}
          beforeSlide={[Function]}
          cellAlign="left"
          cellSpacing={20}
          defaultControlsConfig={Object {}}
          disableAnimation={false}
          disableEdgeSwiping={false}
          dragging={true}
          easing="easeCircleOut"
          edgeEasing="easeElasticOut"
          enableKeyboardControls={false}
          frameOverflow="hidden"
          framePadding="0px"
          getControlsContainerStyles={[Function]}
          height="inherit"
          heightMode="max"
          keyCodeConfig={Object {}}
          onDragStart={[Function]}
          onResize={[Function]}
          pauseOnHover={true}
          renderAnnounceSlideMessage={[Function]}
          renderBottomCenterControls={[Function]}
          renderCenterLeftControls={[Function]}
          renderCenterRightControls={[Function]}
          scrollMode="remainder"
          slideIndex={0}
          slideListMargin={10}
          slideOffset={25}
          slideWidth={1}
          slidesToScroll={1}
          slidesToShow={3}
          speed={500}
          style={Object {}}
          swiping={true}
          transitionMode="scroll"
          vertical={false}
          width="100%"
          withoutControls={true}
          wrapAround={true}
        >
          <div
            className="slider"
            onBlur={[Function]}
            onFocus={[Function]}
            style={
              Object {
                "MozBoxSizing": "border-box",
                "boxSizing": "border-box",
                "display": "block",
                "height": "inherit",
                "position": "relative",
                "width": "100%",
              }
            }
            tabIndex={0}
          >
            <AnnounceSlide
              message="Slide 1 of 3"
            >
              <div
                aria-atomic="true"
                aria-live="polite"
                style={
                  Object {
                    "height": "1px",
                    "left": "-10000px",
                    "overflow": "hidden",
                    "position": "absolute",
                    "top": "auto",
                    "width": "1px",
                  }
                }
                tabIndex={-1}
              >
                Slide 1 of 3
              </div>
            </AnnounceSlide>
            <div
              className="slider-frame"
              onClickCapture={[Function]}
              onMouseDown={[Function]}
              onMouseLeave={[Function]}
              onMouseMove={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              onMouseUp={[Function]}
              onTouchCancel={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "MozBoxSizing": "border-box",
                  "WebkitTransform": "translate3d(0, 0, 0)",
                  "boxSizing": "border-box",
                  "display": "block",
                  "height": "100%",
                  "margin": "0px",
                  "msTransform": "translate(0, 0)",
                  "overflow": "hidden",
                  "padding": 0,
                  "position": "relative",
                  "touchAction": "pinch-zoom pan-y",
                  "transform": "translate3d(0, 0, 0)",
                }
              }
            >
              <Animate
                interpolation={[Function]}
                show={true}
                start={
                  Object {
                    "tx": 0,
                    "ty": 0,
                  }
                }
                update={[Function]}
              >
                <NodeGroup
                  data={
                    Array [
                      Object {
                        "tx": 0,
                        "ty": 0,
                      },
                    ]
                  }
                  enter={[Function]}
                  interpolation={[Function]}
                  keyAccessor={[Function]}
                  leave={[Function]}
                  start={[Function]}
                  update={[Function]}
                >
                  <ScrollTransition
                    cellAlign="left"
                    cellSpacing={20}
                    currentSlide={0}
                    deltaX={-0}
                    deltaY={0}
                    dragging={true}
                    frameWidth={0}
                    hasInteraction={false}
                    heightMode="max"
                    isWrappingAround={false}
                    left={0}
                    slideCount={3}
                    slideHeight={0}
                    slideListMargin={10}
                    slideOffset={25}
                    slideWidth={-13.33333333333333}
                    slidesToScroll={1}
                    slidesToShow={3}
                    top={0}
                    vertical={false}
                    wrapAround={true}
                    zoomScale={0.85}
                  >
                    <ul
                      className="slider-list"
                      style={
                        Object {
                          "MozBoxSizing": "border-box",
                          "WebkitTransform": "translate3d(0px, 0px, 0)",
                          "boxSizing": "border-box",
                          "cursor": "pointer",
                          "display": "block",
                          "height": 0,
                          "margin": "0px -10px",
                          "msTransform": "translate(0px, 0px)",
                          "padding": 0,
                          "position": "relative",
                          "touchAction": "pinch-zoom pan-y",
                          "transform": "translate3d(0px, 0px, 0)",
                          "transition": "0s",
                          "width": "auto",
                        }
                      }
                    >
                      <li
                        className="slider-slide slide-visible slide-current"
                        key="0/.$.$.$Heading0"
                        onClick={[Function]}
                        style={
                          Object {
                            "MozBoxSizing": "border-box",
                            "boxSizing": "border-box",
                            "display": "inline-block",
                            "height": "auto",
                            "left": 0,
                            "listStyleType": "none",
                            "marginBottom": "auto",
                            "marginLeft": 10,
                            "marginRight": 10,
                            "marginTop": "auto",
                            "position": "absolute",
                            "top": 0,
                            "transform": "scale(1)",
                            "transition": "transform .4s linear",
                            "verticalAlign": "top",
                            "width": -13.33333333333333,
                          }
                        }
                        tabIndex={-1}
                      >
                        <ComporatorCard
                          addVehicle={[Function]}
                          aria-hidden="false"
                          deleteVehicle={[Function]}
                          headingValue={
                            Object {
                              "capId": 1,
                              "description": "1.6 GDi SE Nav 5DR 2WD",
                              "image": "https://res.cloudinary.com/diun8mklf/image/upload/c_fill,g_center,h_425,q_auto:best,w_800/v1581538982/cars/AudiQ70719_2_kk0b0n.jpg",
                              "name": "Peugeot 208",
                            }
                          }
                          key=".$.$Heading0"
                          number={1}
                          tabIndex={0}
                        >
                          <Memo()
                            className=""
                            imageSrc="https://res.cloudinary.com/diun8mklf/image/upload/c_fill,g_center,h_425,q_auto:best,w_800/v1581538982/cars/AudiQ70719_2_kk0b0n.jpg"
                            title={
                              Object {
                                "description": "1.6 GDi SE Nav 5DR 2WD",
                                "title": "Peugeot 208",
                              }
                            }
                          >
                            <div
                              className="card"
                              data-testid="card"
                            >
                              <img
                                className="card-image"
                                data-testid="card-image"
                                loading="lazy"
                                onError={[Function]}
                                sizes="(min-width:320px) 800px, 1200px"
                                src="https://res.cloudinary.com/diun8mklf/image/upload/c_fill,g_center,h_425,q_auto:best,w_800/v1581538982/cars/AudiQ70719_2_kk0b0n.jpg"
                              />
                              <Memo()
                                description="1.6 GDi SE Nav 5DR 2WD"
                                title="Peugeot 208"
                              >
                                <div
                                  className="title"
                                >
                                  <Heading
                                    color="black"
                                    dataTestId="card-heading"
                                    size="lead"
                                    tag="span"
                                  >
                                    <span
                                      className="heading -black -lead"
                                      data-testid="card-heading"
                                    >
                                      Peugeot 208
                                    </span>
                                  </Heading>
                                  <Heading
                                    color="dark"
                                    dataTestId="card-description"
                                    size="small"
                                    tag="span"
                                  >
                                    <span
                                      className="heading -dark -small"
                                      data-testid="card-description"
                                    >
                                      1.6 GDi SE Nav 5DR 2WD
                                    </span>
                                  </Heading>
                                </div>
                              </Memo()>
                              <button
                                className="corner-button"
                                data-testid="del-compare-1"
                                onClick={[Function]}
                                type="button"
                              >
                                <Icon
                                  color="white"
                                  icon={<Memo />}
                                >
                                  <i
                                    className="icon -white"
                                  >
                                    <Memo()>
                                      <svg
                                        height="1em"
                                        viewBox="0 0 512 512"
                                        width="1em"
                                      >
                                        <polygon
                                          points="400 145.49 366.51 112 256 222.51 145.49 112 112 145.49 222.51 256 112 366.51 145.49 400 256 289.49 366.51 400 400 366.51 289.49 256 400 145.49"
                                        />
                                      </svg>
                                    </Memo()>
                                  </i>
                                </Icon>
                              </button>
                            </div>
                          </Memo()>
                        </ComporatorCard>
                      </li>
                      <li
                        className="slider-slide slide-visible"
                        inert="true"
                        key="1/.$.$.$Heading1"
                        onClick={[Function]}
                        style={
                          Object {
                            "MozBoxSizing": "border-box",
                            "boxSizing": "border-box",
                            "display": "inline-block",
                            "height": "auto",
                            "left": 6.66666666666667,
                            "listStyleType": "none",
                            "marginBottom": "auto",
                            "marginLeft": 10,
                            "marginRight": 10,
                            "marginTop": "auto",
                            "position": "absolute",
                            "top": 0,
                            "transform": "scale(1)",
                            "transition": "transform .4s linear",
                            "verticalAlign": "top",
                            "width": -13.33333333333333,
                          }
                        }
                        tabIndex={-1}
                      >
                        <ComporatorCard
                          addVehicle={[Function]}
                          aria-hidden="false"
                          deleteVehicle={[Function]}
                          headingValue={
                            Object {
                              "capId": 2,
                              "description": "1.6 GDi SE Nav 5DR 2WD",
                              "image": "https://res.cloudinary.com/diun8mklf/image/upload/c_fill,g_center,h_425,q_auto:best,w_800/v1581538982/cars/AudiQ70719_2_kk0b0n.jpg",
                              "name": "Peugeot 208",
                            }
                          }
                          key=".$.$Heading1"
                          number={2}
                          tabIndex={0}
                        >
                          <Memo()
                            className=""
                            imageSrc="https://res.cloudinary.com/diun8mklf/image/upload/c_fill,g_center,h_425,q_auto:best,w_800/v1581538982/cars/AudiQ70719_2_kk0b0n.jpg"
                            title={
                              Object {
                                "description": "1.6 GDi SE Nav 5DR 2WD",
                                "title": "Peugeot 208",
                              }
                            }
                          >
                            <div
                              className="card"
                              data-testid="card"
                            >
                              <img
                                className="card-image"
                                data-testid="card-image"
                                loading="lazy"
                                onError={[Function]}
                                sizes="(min-width:320px) 800px, 1200px"
                                src="https://res.cloudinary.com/diun8mklf/image/upload/c_fill,g_center,h_425,q_auto:best,w_800/v1581538982/cars/AudiQ70719_2_kk0b0n.jpg"
                              />
                              <Memo()
                                description="1.6 GDi SE Nav 5DR 2WD"
                                title="Peugeot 208"
                              >
                                <div
                                  className="title"
                                >
                                  <Heading
                                    color="black"
                                    dataTestId="card-heading"
                                    size="lead"
                                    tag="span"
                                  >
                                    <span
                                      className="heading -black -lead"
                                      data-testid="card-heading"
                                    >
                                      Peugeot 208
                                    </span>
                                  </Heading>
                                  <Heading
                                    color="dark"
                                    dataTestId="card-description"
                                    size="small"
                                    tag="span"
                                  >
                                    <span
                                      className="heading -dark -small"
                                      data-testid="card-description"
                                    >
                                      1.6 GDi SE Nav 5DR 2WD
                                    </span>
                                  </Heading>
                                </div>
                              </Memo()>
                              <button
                                className="corner-button"
                                data-testid="del-compare-2"
                                onClick={[Function]}
                                type="button"
                              >
                                <Icon
                                  color="white"
                                  icon={<Memo />}
                                >
                                  <i
                                    className="icon -white"
                                  >
                                    <Memo()>
                                      <svg
                                        height="1em"
                                        viewBox="0 0 512 512"
                                        width="1em"
                                      >
                                        <polygon
                                          points="400 145.49 366.51 112 256 222.51 145.49 112 112 145.49 222.51 256 112 366.51 145.49 400 256 289.49 366.51 400 400 366.51 289.49 256 400 145.49"
                                        />
                                      </svg>
                                    </Memo()>
                                  </i>
                                </Icon>
                              </button>
                            </div>
                          </Memo()>
                        </ComporatorCard>
                      </li>
                      <li
                        className="slider-slide slide-visible"
                        inert="true"
                        key="2/.$.$.$Heading2"
                        onClick={[Function]}
                        style={
                          Object {
                            "MozBoxSizing": "border-box",
                            "boxSizing": "border-box",
                            "display": "inline-block",
                            "height": "auto",
                            "left": 13.33333333333334,
                            "listStyleType": "none",
                            "marginBottom": "auto",
                            "marginLeft": 10,
                            "marginRight": 10,
                            "marginTop": "auto",
                            "position": "absolute",
                            "top": 0,
                            "transform": "scale(1)",
                            "transition": "transform .4s linear",
                            "verticalAlign": "top",
                            "width": -13.33333333333333,
                          }
                        }
                        tabIndex={-1}
                      >
                        <ComporatorCard
                          addVehicle={[Function]}
                          aria-hidden="false"
                          deleteVehicle={[Function]}
                          key=".$.$Heading2"
                          number={3}
                          tabIndex={0}
                        >
                          <Memo()
                            className="-skeleton"
                            title={
                              Object {
                                "description": "",
                                "title": "",
                              }
                            }
                          >
                            <div
                              className="card -skeleton"
                              data-testid="card"
                            >
                              <div
                                className="card-image"
                              >
                                <ForwardRef(Button)
                                  color="teal"
                                  fill="solid"
                                  icon={<Memo />}
                                  iconColor="white"
                                  iconPosition="before"
                                  label="Add Vehicle"
                                  onClick={[Function]}
                                  size="regular"
                                >
                                  <button
                                    className="button -teal -regular -solid"
                                    onClick={[Function]}
                                  >
                                    <div
                                      className="button--inner"
                                    >
                                      <Icon
                                        color="white"
                                        icon={<Memo />}
                                      >
                                        <i
                                          className="icon -white"
                                        >
                                          <Memo()>
                                            <svg
                                              height="1em"
                                              viewBox="0 0 512 512"
                                              width="1em"
                                            >
                                              <line
                                                style={
                                                  Object {
                                                    "fill": "none",
                                                    "stroke": "var(--class-color)",
                                                    "strokeLinecap": "square",
                                                    "strokeLinejoin": "round",
                                                    "strokeWidth": 32,
                                                  }
                                                }
                                                x1={256}
                                                x2={256}
                                                y1={112}
                                                y2={400}
                                              />
                                              <line
                                                style={
                                                  Object {
                                                    "fill": "none",
                                                    "stroke": "var(--class-color)",
                                                    "strokeLinecap": "square",
                                                    "strokeLinejoin": "round",
                                                    "strokeWidth": 32,
                                                  }
                                                }
                                                x1={400}
                                                x2={112}
                                                y1={256}
                                                y2={256}
                                              />
                                            </svg>
                                          </Memo()>
                                        </i>
                                      </Icon>
                                      Add Vehicle
                                    </div>
                                  </button>
                                </ForwardRef(Button)>
                              </div>
                              <div
                                className="title"
                              >
                                <Heading
                                  color="black"
                                  size="lead"
                                >
                                  <p
                                    className="heading -black -lead"
                                  >
                                    Vehicle 3
                                  </p>
                                </Heading>
                                <Memo(Text)
                                  color="dark"
                                  size="xsmall"
                                >
                                  <span
                                    className="text -xsmall -dark"
                                  >
                                    —
                                  </span>
                                </Memo(Text)>
                              </div>
                            </div>
                          </Memo()>
                        </ComporatorCard>
                      </li>
                    </ul>
                  </ScrollTransition>
                </NodeGroup>
              </Animate>
            </div>
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": ".slider-slide > img { width: 100%; display: block; }
          .slider-slide > img:focus { margin: auto; }",
                }
              }
              type="text/css"
            />
          </div>
        </Carousel>
        <nav
          className="comparator-table--nav"
        >
          <button
            className="comparator-table--nav-arrow"
            onClick={[Function]}
            type="button"
          >
            <Icon
              color="darker"
              icon={<Memo />}
              size="regular"
            >
              <i
                className="icon -darker -regular"
              >
                <Memo()>
                  <svg
                    height="1em"
                    viewBox="0 0 512 512"
                    width="1em"
                  >
                    <polyline
                      points="244 400 100 256 244 112"
                      style={
                        Object {
                          "fill": "none",
                          "stroke": "var(--class-color)",
                          "strokeLinecap": "square",
                          "strokeMiterlimit": 10,
                          "strokeWidth": 48,
                        }
                      }
                    />
                    <line
                      style={
                        Object {
                          "fill": "none",
                          "stroke": "var(--class-color)",
                          "strokeLinecap": "square",
                          "strokeMiterlimit": 10,
                          "strokeWidth": 48,
                        }
                      }
                      x1={120}
                      x2={412}
                      y1={256}
                      y2={256}
                    />
                  </svg>
                </Memo()>
              </i>
            </Icon>
          </button>
          <button
            className="comparator-table--nav-item -active"
            key="0/.$Heading0"
            onClick={[Function]}
            type="button"
          >
            <Icon
              icon={<Memo />}
              size="regular"
            >
              <i
                className="icon -regular"
              >
                <Memo()>
                  <svg
                    height="1em"
                    viewBox="0 0 512 512"
                    width="1em"
                  >
                    <path
                      d="M256,464C141.31,464,48,370.69,48,256S141.31,48,256,48s208,93.31,208,208S370.69,464,256,464Z"
                    />
                  </svg>
                </Memo()>
              </i>
            </Icon>
          </button>
          <button
            className="comparator-table--nav-item"
            key="1/.$Heading1"
            onClick={[Function]}
            type="button"
          >
            <Icon
              icon={<Memo />}
              size="regular"
            >
              <i
                className="icon -regular"
              >
                <Memo()>
                  <svg
                    height="1em"
                    viewBox="0 0 512 512"
                    width="1em"
                  >
                    <path
                      d="M256,464C141.31,464,48,370.69,48,256S141.31,48,256,48s208,93.31,208,208S370.69,464,256,464Z"
                    />
                  </svg>
                </Memo()>
              </i>
            </Icon>
          </button>
          <button
            className="comparator-table--nav-item"
            key="2/.$Heading2"
            onClick={[Function]}
            type="button"
          >
            <Icon
              icon={<Memo />}
              size="regular"
            >
              <i
                className="icon -regular"
              >
                <Memo()>
                  <svg
                    height="1em"
                    viewBox="0 0 512 512"
                    width="1em"
                  >
                    <path
                      d="M256,464C141.31,464,48,370.69,48,256S141.31,48,256,48s208,93.31,208,208S370.69,464,256,464Z"
                    />
                  </svg>
                </Memo()>
              </i>
            </Icon>
          </button>
          <button
            className="comparator-table--nav-arrow"
            onClick={[Function]}
            type="button"
          >
            <Icon
              color="darker"
              icon={<Memo />}
              size="regular"
            >
              <i
                className="icon -darker -regular"
              >
                <Memo()>
                  <svg
                    height="1em"
                    viewBox="0 0 512 512"
                    width="1em"
                  >
                    <polyline
                      points="268 112 412 256 268 400"
                      style={
                        Object {
                          "fill": "none",
                          "stroke": "var(--class-color)",
                          "strokeLinecap": "square",
                          "strokeMiterlimit": 10,
                          "strokeWidth": 48,
                        }
                      }
                    />
                    <line
                      style={
                        Object {
                          "fill": "none",
                          "stroke": "var(--class-color)",
                          "strokeLinecap": "square",
                          "strokeMiterlimit": 10,
                          "strokeWidth": 48,
                        }
                      }
                      x1={392}
                      x2={100}
                      y1={256}
                      y2={256}
                    />
                  </svg>
                </Memo()>
              </i>
            </Icon>
          </button>
        </nav>
      </header>
    </Slider>
    <ComparatorRow
      columns={
        Array [
          "",
          "",
          "",
        ]
      }
      compares={
        Object {
          "title": "Manufacturer OTR",
          "values": Array [
            "2",
            "2",
          ],
        }
      }
      index={0}
      key="Manufacturer OTR0"
      setIndex={[Function]}
    >
      <Heading
        className="comparator-table--row-title"
        color="black"
        size="regular"
      >
        <p
          className="heading comparator-table--row-title -black -regular"
        >
          Manufacturer OTR
        </p>
      </Heading>
      <div
        className="comparator-table--row"
      >
        <span
          className="comparator-table--col"
          key="Manufacturer OTR0compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="Manufacturer OTR1compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="Manufacturer OTR2compares"
        >
          —
        </span>
      </div>
    </ComparatorRow>
    <ComparatorRow
      columns={
        Array [
          "",
          "",
          "",
        ]
      }
      compares={
        Object {
          "title": "WLTP Combined",
          "values": Array [
            "2",
            "2",
          ],
        }
      }
      index={0}
      key="WLTP Combined1"
      setIndex={[Function]}
    >
      <Heading
        className="comparator-table--row-title"
        color="black"
        size="regular"
      >
        <p
          className="heading comparator-table--row-title -black -regular"
        >
          WLTP Combined
        </p>
      </Heading>
      <div
        className="comparator-table--row"
      >
        <span
          className="comparator-table--col"
          key="WLTP Combined0compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="WLTP Combined1compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="WLTP Combined2compares"
        >
          —
        </span>
      </div>
    </ComparatorRow>
    <ComparatorRow
      columns={
        Array [
          "",
          "",
          "",
        ]
      }
      compares={
        Object {
          "title": "Fuel Type",
          "values": Array [
            "2",
            "2",
          ],
        }
      }
      index={0}
      key="Fuel Type2"
      setIndex={[Function]}
    >
      <Heading
        className="comparator-table--row-title"
        color="black"
        size="regular"
      >
        <p
          className="heading comparator-table--row-title -black -regular"
        >
          Fuel Type
        </p>
      </Heading>
      <div
        className="comparator-table--row"
      >
        <span
          className="comparator-table--col"
          key="Fuel Type0compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="Fuel Type1compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="Fuel Type2compares"
        >
          —
        </span>
      </div>
    </ComparatorRow>
    <ComparatorRow
      columns={
        Array [
          "",
          "",
          "",
        ]
      }
      compares={
        Object {
          "title": "0 to 60 mph (secs)",
          "values": Array [
            "2",
            "2",
          ],
        }
      }
      index={0}
      key="0 to 60 mph (secs)3"
      setIndex={[Function]}
    >
      <Heading
        className="comparator-table--row-title"
        color="black"
        size="regular"
      >
        <p
          className="heading comparator-table--row-title -black -regular"
        >
          0 to 60 mph (secs)
        </p>
      </Heading>
      <div
        className="comparator-table--row"
      >
        <span
          className="comparator-table--col"
          key="0 to 60 mph (secs)0compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="0 to 60 mph (secs)1compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="0 to 60 mph (secs)2compares"
        >
          —
        </span>
      </div>
    </ComparatorRow>
    <ComparatorRow
      columns={
        Array [
          "",
          "",
          "",
        ]
      }
      compares={
        Object {
          "title": "CC",
          "values": Array [
            "2",
            "2",
          ],
        }
      }
      index={0}
      key="CC4"
      setIndex={[Function]}
    >
      <Heading
        className="comparator-table--row-title"
        color="black"
        size="regular"
      >
        <p
          className="heading comparator-table--row-title -black -regular"
        >
          CC
        </p>
      </Heading>
      <div
        className="comparator-table--row"
      >
        <span
          className="comparator-table--col"
          key="CC0compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="CC1compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="CC2compares"
        >
          —
        </span>
      </div>
    </ComparatorRow>
    <ComparatorRow
      columns={
        Array [
          "",
          "",
          "",
        ]
      }
      compares={
        Object {
          "title": "Engine Power - BHP",
          "values": Array [
            "2",
            "2",
          ],
        }
      }
      index={0}
      key="Engine Power - BHP5"
      setIndex={[Function]}
    >
      <Heading
        className="comparator-table--row-title"
        color="black"
        size="regular"
      >
        <p
          className="heading comparator-table--row-title -black -regular"
        >
          Engine Power - BHP
        </p>
      </Heading>
      <div
        className="comparator-table--row"
      >
        <span
          className="comparator-table--col"
          key="Engine Power - BHP0compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="Engine Power - BHP1compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="Engine Power - BHP2compares"
        >
          —
        </span>
      </div>
    </ComparatorRow>
    <ComparatorRow
      columns={
        Array [
          "",
          "",
          "",
        ]
      }
      compares={
        Object {
          "title": "Insurance Group",
          "values": Array [
            "2",
            "2",
          ],
        }
      }
      index={0}
      key="Insurance Group6"
      setIndex={[Function]}
    >
      <Heading
        className="comparator-table--row-title"
        color="black"
        size="regular"
      >
        <p
          className="heading comparator-table--row-title -black -regular"
        >
          Insurance Group
        </p>
      </Heading>
      <div
        className="comparator-table--row"
      >
        <span
          className="comparator-table--col"
          key="Insurance Group0compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="Insurance Group1compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="Insurance Group2compares"
        >
          —
        </span>
      </div>
    </ComparatorRow>
    <ComparatorRow
      columns={
        Array [
          "",
          "",
          "",
        ]
      }
      compares={
        Object {
          "title": "No. of Seats",
          "values": Array [
            "2",
            "2",
          ],
        }
      }
      index={0}
      key="No. of Seats7"
      setIndex={[Function]}
    >
      <Heading
        className="comparator-table--row-title"
        color="black"
        size="regular"
      >
        <p
          className="heading comparator-table--row-title -black -regular"
        >
          No. of Seats
        </p>
      </Heading>
      <div
        className="comparator-table--row"
      >
        <span
          className="comparator-table--col"
          key="No. of Seats0compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="No. of Seats1compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="No. of Seats2compares"
        >
          —
        </span>
      </div>
    </ComparatorRow>
    <ComparatorRow
      columns={
        Array [
          "",
          "",
          "",
        ]
      }
      compares={
        Object {
          "title": "Top Speed",
          "values": Array [
            "2",
            "2",
          ],
        }
      }
      index={0}
      key="Top Speed8"
      setIndex={[Function]}
    >
      <Heading
        className="comparator-table--row-title"
        color="black"
        size="regular"
      >
        <p
          className="heading comparator-table--row-title -black -regular"
        >
          Top Speed
        </p>
      </Heading>
      <div
        className="comparator-table--row"
      >
        <span
          className="comparator-table--col"
          key="Top Speed0compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="Top Speed1compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="Top Speed2compares"
        >
          —
        </span>
      </div>
    </ComparatorRow>
    <ComparatorRow
      columns={
        Array [
          "",
          "",
          "",
        ]
      }
      compares={
        Object {
          "title": "Transmission",
          "values": Array [
            "2",
            "2",
          ],
        }
      }
      index={0}
      key="Transmission9"
      setIndex={[Function]}
    >
      <Heading
        className="comparator-table--row-title"
        color="black"
        size="regular"
      >
        <p
          className="heading comparator-table--row-title -black -regular"
        >
          Transmission
        </p>
      </Heading>
      <div
        className="comparator-table--row"
      >
        <span
          className="comparator-table--col"
          key="Transmission0compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="Transmission1compares"
        >
          2
        </span>
        <span
          className="comparator-table--col"
          key="Transmission2compares"
        >
          —
        </span>
      </div>
    </ComparatorRow>
    <ComparatorRow
      columns={
        Array [
          "",
          "",
          "",
        ]
      }
      index={0}
      priceValues={
        Array [
          Object {
            "capId": 1,
            "price": 56.73,
          },
          Object {
            "capId": 2,
            "price": 55.44,
          },
        ]
      }
      setIndex={[Function]}
      viewOffer={[Function]}
    >
      <div
        className="comparator-table--row"
      >
        <span
          className="comparator-table--col"
          key="56.73price"
        >
          <Price
            color="black"
            price={56.73}
            priceDescription="Per Month ex. VAT"
            size="xlarge"
          >
            <div
              className="price -xlarge -black"
            >
              <span
                className="price--sub"
              >
                £
              </span>
              <span
                className="price--pounds"
              >
                56
              </span>
              <span
                className="price--sub"
              >
                .
                73
              </span>
              <div
                className="price--label"
              >
                Per Month ex. VAT
              </div>
            </div>
          </Price>
          <ForwardRef(Button)
            color="teal"
            fill="solid"
            label="View Offer"
            onClick={[Function]}
            size="regular"
          >
            <button
              className="button -teal -regular -solid"
              onClick={[Function]}
            >
              <div
                className="button--inner"
              >
                View Offer
              </div>
            </button>
          </ForwardRef(Button)>
        </span>
        <span
          className="comparator-table--col"
          key="55.44price"
        >
          <Price
            color="black"
            price={55.44}
            priceDescription="Per Month ex. VAT"
            size="xlarge"
          >
            <div
              className="price -xlarge -black"
            >
              <span
                className="price--sub"
              >
                £
              </span>
              <span
                className="price--pounds"
              >
                55
              </span>
              <span
                className="price--sub"
              >
                .
                44
              </span>
              <div
                className="price--label"
              >
                Per Month ex. VAT
              </div>
            </div>
          </Price>
          <ForwardRef(Button)
            color="teal"
            fill="solid"
            label="View Offer"
            onClick={[Function]}
            size="regular"
          >
            <button
              className="button -teal -regular -solid"
              onClick={[Function]}
            >
              <div
                className="button--inner"
              >
                View Offer
              </div>
            </button>
          </ForwardRef(Button)>
        </span>
        <span
          className="comparator-table--col"
          key="empty2"
        >
          —
        </span>
      </div>
    </ComparatorRow>
  </div>
</ComporatorTable>
`;
