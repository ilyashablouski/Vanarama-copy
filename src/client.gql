type OrderInputObjectWithRating {
  order: OrderInputObject
  rating: Float
}

input RentalCostInputObject {
  excessMileage: Float
  initialRental: Float
  monthlyRental: Float
}

input NextBestPriceInputObject {
  maintained: Float
  nonMaintained: Float
}

input QuoteInputObject {
  availability: String
  capId: ID
  colour: ID
  financeType: Int
  freeInsurance: Boolean
  funderId: Int
  leadTime: String
  leaseCost: RentalCostInputObject
  leaseType: LeaseTypeEnum
  maintenanceCost: RentalCostInputObject
  mileage: Int
  nextBestPrice: NextBestPriceInputObject
  processingFee: Float
  stock: String
  stockBatchId: Int
  term: Int
  trim: ID
  upfront: Int
  vehicleType: VehicleTypeEnum
}

input PersonBankUuidInputObject {
  bankUuid: ID
}

extend type Query {
  leaseTypes: JSON
  sortOrder: JSON
  lastStep: JSON
  isSessionFinished: Boolean
  storedPerson: PersonType
  storedPersonUuid: ID
  storedOrder: OrderInputObjectWithRating
  storedPersonEmail: String
  storedPersonBankUuid: PersonBankUuidInputObject
  storedQuote: Quote
  isSSRAuthError: Boolean
}

extend type Mutation {
  savePerson(person: PersonInputObject): PersonType
  savePersonUuid(uuid: ID): ID
  saveOrder(order: OrderInputObject, rating: Float): OrderInputObjectWithRating
  savePersonEmail(email: String): String
  saveQuote(quote: QuoteInputObject): Quote
  deletePersonEmail: Boolean
  deleteStoredPerson: Boolean
  savePersonBankUuid(bankUuid: ID): ID
}
