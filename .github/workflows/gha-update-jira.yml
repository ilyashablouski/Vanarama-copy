name: gha-update-jira

env:
  APP: cap-gql
  ECR_REGION: eu-west-2
on:
  deployment_status:

jobs:
  gha-update-jira:
    if: ${{ github.event.deployment_status.state == 'success' && github.event.deployment.payload.tag != '' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.ECR_REGION }}
          role-to-assume: ${{ secrets.GRID_UAT_GHA_ACTION_ROLE }}
      - uses: aws-actions/amazon-ecr-login@v1

      - name: set variables
        id: variables
        run: |
          #fetch deployment information
          echo ::set-output name=deployment_id::${{ github.event.deployment.id }}
          echo ::set-output name=status::${{ github.event.deployment_status.state }}
          echo ::set-output name=branch::${{ github.event.deployment.ref }}
          echo ::set-output name=sha::${{ github.event.deployment.sha }}
          echo ::set-output name=repo::${{ github.event.deployment.repository_url }}
          echo ::set-output name=tag::${{ github.event.deployment.payload.tag }}
          echo ::set-output name=environment::${{ github.event.deployment.environment }}
          
      - name: get jira ticket's
        id: ticket
        run: |
            export GITHUB_API_URL=${{ steps.variables.outputs.repo }}
            export ARTIFACT_TAG=${{ steps.variables.outputs.tag }}
            export GITHUB_PAT=${{secrets.GRID_GIT_TOKEN}}
            export JIRA_API_TOKEN=${{ secrets.GRID_JIRA_API_TOKEN }}
            export AWS_REGION=${{ env.ECR_REGION }}
            export ECR_REPOSITORY_NAME=${{ env.APP }}
            source .github/workflows/scripts/ticket-collection.sh
            echo ::set-output name=ticket::$JIRA_TICKETS_STRING
            
      - name: update jira ticket
        if: ${{ steps.variables.outputs.status == 'success' && steps.ticket.outputs.ticket != '' }}
        run: |
          JIRA_REF_LIST=(${{ steps.ticket.outputs.ticket }})
          ENV=$(echo ${{ steps.variables.outputs.environment }} | tr '[:lower:]' '[:upper:]' )
          # customfield_10097 is referring to Test Environment
          # customfield_10114 is referring to Release
          jira_payload() {
          cat <<EOF
          {
            "update": {
              "customfield_10097": [
                {
                  "set": [
                    {
                      "value": "$ENV"
                    }
                  ]
                }
              ],
              "customfield_10114": [
                {
                  "set": "${{ steps.variables.outputs.tag }}"
                }
              ]
            }
          }
          EOF
          }
          for ref in "${JIRA_REF_LIST[@]}"; do
            curl --location --request PUT "https://autorama.atlassian.net/rest/api/3/issue/$ref" \
              --header "Accept: application/json" \
              --user "devops@vanarama.co.uk:${{ secrets.GRID_JIRA_API_TOKEN }}" \
              --header 'Content-Type: application/json' \
              --data-raw "$(jira_payload)"
          done
          echo $ref